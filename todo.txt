Current Codebase Problems:
The gripping system is a monolith. I want to make it easy to add, remove, or modify a variety of grip locking types.
No facility for communication between item scripts.
Reading Metadata is too ugly
ItemInstance system sucks. (<- Elaborate)
Need MUCH more possible information for items.

BaseItem functionality is vauge and unhelpful.
CollisionMasks are not obvious, no helpful info...
Item Ownership still sucks

Things I want to add:
	NO Thumb Joint Control
	Reflection of effects and shit.
	ECS for items? (Fully represent items as data, and just have system implementations)
	Synchronization for guns and magazines (chamber state, round count)
	Proper Hitreg.
	Items able to communicate data.
	At least a basic nonintrusive anticheat.
	More robust IK & fullbody IK.
	3d Math Utility Module(s)
	Allow the 2-point directional grip system.
	Attachment (support) system for guns.
	Inventory system (?)
	Gesture system?
	VRClient class?

    Camera wrapper class?
    Controller wrapper class?
    Hardware Relevant shit
        Currently no way to detect. We're just gonna have to ask the player the first time they join.
        Along with calibrating floor level and body height. (I'll be able to datamine manlets LUL)
    

Things I want to remove:

start -> grab by barrel (normal grip)
next -> grab the handle (direction grip)
next -> release the barrel (back to normal grip)
next -> release the handle ()

handle = {
    priority = true,
}

Questions:
	Use Humanoid at all? (Don't like it that much!)


Essentials of client main:
    Kinematics on body
    Input (Both keyboard and VRController buttons)
    Camera

Essentials of VRHand:
    Reads UserCFrame for hand controller
    Handles object grabbing and releasing
        Object highlighting
        Object grab search
        Obj metadata parsing
        Weld creation and maintenance
    Runs animations on hand model to match IRL
    Provides haptic feedback (rumble)


TODO:
    Client taking damage indicator